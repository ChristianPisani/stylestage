@use "sass:list";

@function boxShadowPattern($amount, $size, $colors...) {
  $shadows: ();
  
  $offset: 0px;
  
  $color1Count: 0;
  $otherColorCount: 0;
  $countLimit: 1;
  $currentColor: 1;

  @for $i from 1 to $amount {
    $mod: ($i % length($colors)) + 1;
    
    $blur: 0px;
    
    @if $mod == 1 {
      $color1Count: $color1Count + 1;
    }
    
    @if($color1Count >= $countLimit) {
      $countLimit: $countLimit + 1;
      $color1Count: 0;
      $currentColor: 2;
    }
    
    $shadows: list.append(
                    $shadows,
                            (nth($colors, $currentColor)) 0px 0px $blur $offset,
            $separator: comma);
    
    $currentColor: 1;
      
    /*$shadows: list.append(
                    $shadows, 
                    nth($colors, $mod) 0px $offset $blur (5px - $i), 
                    $separator: comma);*/
    
    $offset: $i * $size / 2;
  }
  
  $shadows: list.append(
    $shadows,
    $color-shadow 0px (length($colors) * $size / 2) + 25px 10px 0px,
    $separator: comma
  );

  /*$shadows: list.append(
    $shadows, 
    $color-shadow 0px 5px 10px 0px inset,
    $separator: comma
  );*/

  @return $shadows;
}

@function conicGradient() {
  $gradient: ();
  
  @return conic-gradient(
          $neonBlue calc(0deg + var(--bg-rotation)),
          $neonBlue calc(45deg + var(--bg-rotation)),
          transparent calc(45deg + var(--bg-rotation)),
          transparent calc(90deg + var(--bg-rotation)),
          $neonBlue calc(90deg + var(--bg-rotation)),
          $neonBlue calc(135deg + var(--bg-rotation)),
          transparent calc(135deg + var(--bg-rotation)),
          transparent calc(180deg + var(--bg-rotation)),
          $neonBlue calc(180deg + var(--bg-rotation)),
          $neonBlue calc(225deg + var(--bg-rotation)),
          transparent calc(225deg + var(--bg-rotation)),
          transparent calc(270deg + var(--bg-rotation)),
          $neonBlue calc(270deg + var(--bg-rotation)),
          $neonBlue calc(315deg + var(--bg-rotation)),
          transparent calc(315deg + var(--bg-rotation)),
          transparent calc(360deg + var(--bg-rotation)));
}

@mixin conical-gradient($count, $colors...) {
  $cones: null;
  $rotationStep: 360deg / $count;

  @for $i from 1 through $count {
    $mod: ($i % length($colors)) + 1;
    @debug $colors;
    
    $start-rotation: ($rotationStep) * ($i - 1);
    $end-rotation: $rotationStep * $i;
    
    $color: nth($colors, $mod);
    
    $stripe: $color $start-rotation;
    $stripeEnd: $color $end-rotation;
    $cones: append($cones, $stripe, comma);
    $cones: append($cones, $stripeEnd, comma);
  }

  background-image: conic-gradient($cones);
}

@mixin linear-gradient($rotation, $count, $colors...) {
  $cones: null;
  $rotationStep: 100% / $count;

  @for $i from 1 through $count {
    $mod: ($i % length($colors)) + 1;
    @debug $colors;

    $start-rotation: ($rotationStep) * ($i - 1);
    $end-rotation: $rotationStep * $i;

    $color: nth($colors, $mod);

    $stripe: $color $start-rotation;
    $stripeEnd: $color $end-rotation;
    $cones: append($cones, $stripe, comma);
    $cones: append($cones, $stripeEnd, comma);
  }

  background-image: linear-gradient($rotation, $cones);
}

@mixin shinyText($text, $fontSize) {
  position: relative;
  font-family: $font-header;
  color: $color-primary;
  font-size: $fontSize;
  font-weight: 200;
  text-shadow:
          2px 1px 0px $color-primary-tint,
          0px 0px 10px $color-primary,
          0px 10px 5px $color_shadow;

  &::before {
    content: "";
    filter: blur(20px);
  }

  &::after {
    content: $text;
    position: absolute;
    left: 0px;
    top: 0px;
    width: 100%;
    color: transparent;
    background: white;
    -webkit-background-clip: text;
    animation: 3s infinite ease-in clipPath;
    filter: blur(2px);
  }

  @media only screen and (max-width: 1250px)  {
    font-size: $fontSize * 0.6;
  }
}